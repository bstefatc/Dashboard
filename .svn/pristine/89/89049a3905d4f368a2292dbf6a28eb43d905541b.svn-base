package com.inc.sombra.controller;

import java.util.Locale;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;


import com.inc.sombra.entity.Comment;
import com.inc.sombra.entity.Picture;
import com.inc.sombra.manager.ICommentManager;
import com.inc.sombra.manager.IPictureManager;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	@Autowired
	IPictureManager pictureManager;
	
	@Autowired
	ICommentManager commentManager;
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		System.out.println(pictureManager.getAll());
		
		model.addAttribute("pictureList", pictureManager.getAll());
		
		return "home";
	}
	
	@RequestMapping(value = "/items/{itemId}", method = RequestMethod.GET)
	public String item( Model model,@PathVariable Integer itemId) {
		logger.info("Welcome home! The client locale is {}.");
		model.addAttribute("commentForm",  new Comment());
		model.addAttribute("oneItem", pictureManager.findPictureById(itemId));
		model.addAttribute("comment", commentManager.findByPictureId(itemId));
		 return "item";
	}
	
	@RequestMapping(value = "/items/{itemId}", method = RequestMethod.POST)
	public String addCommentn(Model model,@ModelAttribute("commentForm") Comment comment,
			@PathVariable Integer itemId){
		Picture picture = new Picture();
		picture.setId(itemId);
		comment.setPicture(picture);
		model.addAttribute("oneItem", pictureManager.findPictureById(itemId));
		model.addAttribute("comment", commentManager.findByPictureId(itemId));
		commentManager.save(comment);
		return "redirect:/items/"+itemId;
		}
	
}
